// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using courseManagementSystemV1.DBContext;

#nullable disable

namespace courseManagementSystemV1.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240602224034_CMS1")]
    partial class CMS1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.31")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("courseManagementSystemV1.Models.Course", b =>
                {
                    b.Property<int>("courseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("courseID"), 1L, 1);

                    b.Property<DateTime?>("courseEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("courseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("courseStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("courseID");

                    b.ToTable("Cases");
                });

            modelBuilder.Entity("courseManagementSystemV1.Models.CourseManagement", b =>
                {
                    b.Property<int>("courseMangID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("courseMangID"), 1L, 1);

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("courseID")
                        .HasColumnType("int");

                    b.Property<int>("instructorID")
                        .HasColumnType("int");

                    b.HasKey("courseMangID");

                    b.HasIndex("courseID");

                    b.HasIndex("instructorID");

                    b.ToTable("courseManagements");
                });

            modelBuilder.Entity("courseManagementSystemV1.Models.Enrollment", b =>
                {
                    b.Property<int>("enrollmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("enrollmentID"), 1L, 1);

                    b.Property<int>("courseID")
                        .HasColumnType("int");

                    b.Property<DateTime>("enrollmentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("userID")
                        .HasColumnType("int");

                    b.HasKey("enrollmentID");

                    b.HasIndex("courseID");

                    b.HasIndex("userID");

                    b.ToTable("Enrollments");
                });

            modelBuilder.Entity("courseManagementSystemV1.Models.Instructor", b =>
                {
                    b.Property<int>("instructorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("instructorID"), 1L, 1);

                    b.Property<string>("GitHibAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ISDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<string>("LindenInAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("instructorConfPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("instructorCreatedAccount")
                        .HasColumnType("datetime2");

                    b.Property<string>("instructorEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("instructorFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("instructorLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("instructorMiddelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("instructorPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("instructorPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("instructorPhoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("instructorSSN")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.HasKey("instructorID");

                    b.ToTable("Instructors");
                });

            modelBuilder.Entity("courseManagementSystemV1.Models.User", b =>
                {
                    b.Property<int>("userID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userID"), 1L, 1);

                    b.Property<bool?>("ISDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsUserHR")
                        .HasColumnType("bit");

                    b.Property<bool>("normalUser")
                        .HasColumnType("bit");

                    b.Property<string>("userAddressGov")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userCollege")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userConfPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("userCreatedAccount")
                        .HasColumnType("datetime2");

                    b.Property<string>("userDepartment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("userEnterCollegeDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("userFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userMiddelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userPhoneNumber")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("userPhoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userSSN")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("userUniversity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userstreet")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("courseManagementSystemV1.Models.CourseManagement", b =>
                {
                    b.HasOne("courseManagementSystemV1.Models.Course", "course")
                        .WithMany("courseManagements")
                        .HasForeignKey("courseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("courseManagementSystemV1.Models.Instructor", "instructor")
                        .WithMany("courseManagements")
                        .HasForeignKey("instructorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("course");

                    b.Navigation("instructor");
                });

            modelBuilder.Entity("courseManagementSystemV1.Models.Enrollment", b =>
                {
                    b.HasOne("courseManagementSystemV1.Models.Course", "course")
                        .WithMany("enrollments")
                        .HasForeignKey("courseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("courseManagementSystemV1.Models.User", "user")
                        .WithMany("enrollments")
                        .HasForeignKey("userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("course");

                    b.Navigation("user");
                });

            modelBuilder.Entity("courseManagementSystemV1.Models.Course", b =>
                {
                    b.Navigation("courseManagements");

                    b.Navigation("enrollments");
                });

            modelBuilder.Entity("courseManagementSystemV1.Models.Instructor", b =>
                {
                    b.Navigation("courseManagements");
                });

            modelBuilder.Entity("courseManagementSystemV1.Models.User", b =>
                {
                    b.Navigation("enrollments");
                });
#pragma warning restore 612, 618
        }
    }
}
